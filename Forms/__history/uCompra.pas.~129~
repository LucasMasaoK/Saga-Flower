unit uCompra;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uModelVenda, Data.DB, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.Mask,
  Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.Buttons;

type
  TfrmCompra = class(TfrmModelVenda)
    bancoQueryCompra: TFDQuery;
    bancoQueryCompraID_COMPRA: TIntegerField;
    bancoQueryCompraID_FORNECEDOR: TIntegerField;
    bancoQueryCompraID_FORMA_PGTO: TIntegerField;
    bancoQueryCompraUSUARIO: TStringField;
    bancoQueryCompraVALOR: TFMTBCDField;
    bancoQueryCompraCADASTRO: TDateField;
    Label2: TLabel;
    DBEdit8: TDBEdit;
    DataSourceCompra: TDataSource;
    Label8: TLabel;
    editFornecedor: TDBEdit;
    Label9: TLabel;
    DBEdit10: TDBEdit;
    Label10: TLabel;
    editUsuario: TDBEdit;
    Label11: TLabel;
    DBEdit12: TDBEdit;
    Label12: TLabel;
    DBEdit13: TDBEdit;
    bancoQueryPagamento: TFDQuery;
    bancoQueryFornecedor: TFDQuery;
    bancoQueryCompraNOMEFORNECEDOR: TStringField;
    Label13: TLabel;
    bancoQueryCompraFORMAPAGAMENTO: TStringField;
    Label14: TLabel;
    dataSourcePagamento: TDataSource;
    bancoQueryPagamentoID_FORMA_PGTO: TIntegerField;
    bancoQueryPagamentoDESCRICAO: TStringField;
    DBLookupComboBox1: TDBLookupComboBox;
    DBLookupComboBox2: TDBLookupComboBox;
    bancoQueryItensSUBTOTAL: TAggregateField;
    bancoQueryProdutosESTOQUE: TFMTBCDField;
    DBNavigator1: TDBNavigator;
    procedure FormActivate(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnInserirProdutoClick(Sender: TObject);
    procedure DBEdit3Enter(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnDeletarClick(Sender: TObject);
    procedure btnCancelarProdutoClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
  private
    postCompra: integer;
  public
    { Public declarations }
  end;

var
  frmCompra: TfrmCompra;

implementation

{$R *.dfm}

uses uDataModule;

procedure TfrmCompra.btnCancelarClick(Sender: TObject);
begin
  inherited;
bancoQueryCompra.Cancel;
end;

procedure TfrmCompra.btnCancelarProdutoClick(Sender: TObject);
begin
  inherited;
  if MessageDlg('Deseja deletar o produto ' + bancoQueryItensID_PRODUTO.AsString
    + '?', TMsgDlgType.mtInformation, [mbOk, mbNo], 0) = mrOk then
  begin
    bancoQueryProdutos.Edit;
    bancoQueryProdutosESTOQUE.AsFloat := bancoQueryProdutosESTOQUE.AsFloat -
      bancoQueryItensQTDE.AsFloat;
    bancoQueryItens.Delete;

  end;

end;

procedure TfrmCompra.btnDeletarClick(Sender: TObject);
var
  i: Integer;
begin
if MessageDlg('Deseja estornar venda?',TMsgDlgType.mtInformation,[mbOk,mbNo],0) = mrOk then
begin
bancoQueryItens.First;

for i := 1 to bancoQueryItens.RecordCount do
begin
bancoQueryItens.Edit;
bancoQueryProdutos.Edit;
bancoQueryProdutosESTOQUE.AsFloat:=bancoQueryProdutosESTOQUE.AsFloat - bancoQueryItensQTDE.AsFloat;
bancoQueryProdutos.Post;
bancoQueryItens.Delete;
end;
bancoQueryCompra.Delete;
end;

end;

procedure TfrmCompra.btnInserirProdutoClick(Sender: TObject);
begin
  if bancoQueryProdutos.Locate('ID_PRODUTO',
    bancoQueryItens.FieldByName('ID_PRODUTO').AsInteger, []) then
  begin

    bancoQueryItensID_COMPRA.AsInteger := bancoQueryCompraID_COMPRA.AsInteger;
    bancoQueryItens.Post;
    bancoQueryCompra.Edit;
    bancoQueryCompraVALOR.AsFloat := bancoQueryItensSUBTOTAL.Value;
    bancoQueryCompra.Post;
    bancoQueryItens.Append;
  end
end;

procedure TfrmCompra.btnNovoClick(Sender: TObject);
begin
  inherited;
  bancoQueryCompra.Append;
end;

procedure TfrmCompra.btnSalvarClick(Sender: TObject);
begin
  bancoQueryItens.First;
  var
    i: integer;
  for i := 1 to bancoQueryItens.RecordCount do
  begin

    if bancoQueryProdutos.Locate('ID_PRODUTO',
      bancoQueryItensID_PRODUTO.AsInteger, []) then
    begin
      bancoQueryItens.Edit;
      bancoQueryProdutos.Edit;
      bancoQueryProdutosESTOQUE.AsInteger := bancoQueryProdutosESTOQUE.AsInteger
        + bancoQueryItensQTDE.AsInteger;
      bancoQueryProdutos.Post;

      bancoQueryItens.Next;
    end;
  end;
  ShowMessage('Venda feita com sucesso!');
end;

procedure TfrmCompra.DBEdit3Enter(Sender: TObject);
begin
  inherited;
  if postCompra = 0 then
  begin
    try
      bancoQueryCompra.Post;
      postCompra := 1;
    except
      begin
        ShowMessage('PREENCHA OS DADOS DA COMPRA');
        bancoQueryCompra.Cancel;
      end;
    end;
  end;
end;

procedure TfrmCompra.FormActivate(Sender: TObject);
begin
  inherited;
  bancoQueryCompra.Active := True;
end;

procedure TfrmCompra.FormShow(Sender: TObject);
begin
  inherited;
  bancoQueryCompra.Open;
  bancoQueryCompra.Append;
  bancoQueryCompraUSUARIO.AsString := 'Lucas';
  bancoQueryCompraID_FORMA_PGTO.AsInteger := 1;
  bancoQueryCompraCADASTRO.AsDateTime := Date;
  bancoQueryItens.ParamByName('pCompra').AsInteger :=
    bancoQueryCompraID_COMPRA.AsInteger;

  bancoQueryItens.Open;
  bancoQueryItens.Edit;

end;

end.
